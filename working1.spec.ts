// Generated by Skyramp v0.5.0.9f152772 on 2025-10-28 13:41:42.795926611 -0400 EDT m=+0.341881573
// Command: skyramp generate ui rest \
// 		--language typescript \
// 		--playwright-trace skyramp_playwright.zip \

// Import of required libraries
import { test } from '@playwright/test';
import { expect, getValue, newSkyrampPlaywrightPage } from '@skyramp/skyramp';

const pageTimeout = 15000;

test('testUi', async ({ page }) => {
    test.setTimeout(60000);
    // set default timeout for all locator/page actions in this test
    page.setDefaultTimeout(pageTimeout);

    // wrap playwright page with Skyramp page
    page = newSkyrampPlaywrightPage(page);

    await page.goto("https://easyocr-pre-release.digital-ai-app.com/easyocrui/login");
    await page.locator("#mui-7").click();
    const playwrightRequest0: Record<string, any> = {
        "email": "kolja@skyramp.dev",
        "tenantId": "80"
    };

    await page.locator("#mui-7").fill(getValue(playwrightRequest0, "tenantId"));
    await page.locator("#mui-7").press("Tab");
    await page.locator("#mui-5").fill(getValue(playwrightRequest0, "email"));
    await page.locator("#mui-5").press("Tab");
    await page.locator("#mui-6").fill("SkyrampTester2025!");
    // Wait to finish any potential hydration
    await page.waitForTimeout(1500);
    const responsePromise0 = page.waitForResponse("**/easyocrapi/api-easyocr/tenant-preference**");
    await page.locator("#mui-6").press("Enter");
    const response0 = await responsePromise0;

    // File upload
    const fileUploadPromise0 = page.waitForEvent("filechooser");
    await page.getByRole("button", { name: "ファイルを選択" }).click();
    const fileChooser0 = await fileUploadPromise0;
    await fileChooser0.setFiles("Sample-Financial-Statements-1.pdf");
    // Wait for additional time after file upload
    await page.waitForTimeout(1500);

    await page.getByRole("button", { name: "件 のファイル（155.1 KB）を開く" }).click();
    await page.locator("button").filter({ hasText: "次へ" }).click();
    await page.locator("button").filter({ hasText: "次へ" }).click();
    await page.locator("button").filter({ hasText: "次へ" }).click();
    await page.locator("button").filter({ hasText: "説明を終了する" }).click();
    // Wait to finish any potential hydration
    // await page.waitForTimeout(1500);
    await page.getByText("範囲を選択").click();

    await page.mouse.move(372, 222);
    await page.mouse.down();
    await page.mouse.move(531, 344);
    const responsePromise1 = page.waitForResponse(response => response.url().includes('/easyocrapi/api-easyocr/predict'));
    await page.mouse.up();
    const response1 = await responsePromise1;
    expect(await response1.status()).toBe(200);
    await expect(page.locator("tbody tr:nth-child(2) td:nth-child(2)")).toHaveText("Depreciation expense");
});
